version: "3.7"
services:
  backend:
    build: ./backend
    tty: true
    restart: unless-stopped
    volumes:
      - ./backend:/var/www/laravel
    ports:
      - '8000:8000'
    env_file:
      - ./backend/.env
    depends_on:
      - mysql
  mysql:
    image: mysql
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    #    ports:
    #      - '8101:3306'
    restart: unless-stopped
    env_file:
      - .env.local
    volumes:
      - /var/lib/mysql
      - ./backup:/backup
  backup:
    image: mysql:latest
    volumes:
      - ./backup.sh:/backup.sh
      - ./backup:/backup
    entrypoint: /bin/bash
    command: /backup.sh
  restore:
    image: mysql:latest
    volumes:
      - ./restore.sh:/restore.sh
      - ./backup:/backup
    entrypoint: /bin/bash
    command: /restore.sh
    depends_on:
      - mysql

  phpmyadmin:
    platform: linux/amd64
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_ARBITRARY: 1
      restart: always
    ports:
      - "3400:80"
    depends_on:
      - mysql
  frontend:
    build: ./frontend
    environment:
      - NODE_ENV=development
      - HOST=0.0.0.0
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend:/usr/src/app
    command: sh -c 'npm install && npm run dev'
    restart: unless-stopped
    ports:
      - '3000:3000'
    tty: true
  nginx:
    build:
      context: ./nginx/
      dockerfile: Dockerfile
    ports:
      - 5001:80
    tty: true
    restart: unless-stopped
    depends_on:
      - frontend
      - backend
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro